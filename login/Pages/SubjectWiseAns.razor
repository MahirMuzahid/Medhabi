@using ChartJs.Blazor.ChartJS.BarChart
@using ChartJs.Blazor.ChartJS.BarChart.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.ChartJS.Common.Wrappers
@using ChartJs.Blazor.Util
@using login.Data

<h3>Total Question Answered vs Total Right Answer Chart</h3>
<br />
BAN1 = Bangla First Paper, BAN2 = Bangla First Paper, PHY1 = Physics First Paper, PHY2 = Physics Second Paper, CHE1 = Chemistry First Paper, CHE2 = Chemistry Second Paper, BIO1 = Biology Firs Paper, BIO2 = Biology 2nd Paper
<ChartJsBarChart @ref="_barChartJs" Config="@_config" Width="600" Height="300" />

@code {
    private BarConfig _config;
    private ChartJsBarChart _barChartJs;


    private string conText;
    private bool open;

    private int anqB1;
    private int anqB2;
    private int anqICT;
    private int anqPhy1;
    private int anqChe1;
    private int anqBio1;
    private int anqPhy2;
    private int anqChe2;
    private int anqBio2;

    private int accB1;
    private int accB2;
    private int accICT;
    private int accPhy1;
    private int accChe1;
    private int accBio1;
    private int accPhy2;
    private int accChe2;
    private int accBio2;
    List<int> infoqs = new List<int> ();
    List<int> infoans = new List<int> ();    

    public async void setALlInfoforChart ( )
    {

        infoqs = CalculateInfoForPaidStudent.allqs;
        infoans = CalculateInfoForPaidStudent.allans;

        if ( infoans.Count != 0 && infoqs.Count != 0 )
        {
            anqB1 = infoqs [ 0 ];
            anqB2 = infoqs [ 1 ];
            anqICT = infoqs [ 2 ];
            anqPhy1 = infoqs [ 3 ];
            anqPhy2 = infoqs [ 4 ];
            anqChe1 = infoqs [ 5 ];
            anqChe2 = infoqs [ 6 ];
            anqBio1 = infoqs [ 7 ];
            anqBio2 = infoqs [ 8 ];

            accB1 = infoans [ 0 ];
            accB2 = infoans [ 1 ];
            accICT = infoans [ 2 ];
            accPhy1 = infoans [ 3 ];
            accPhy2 = infoans [ 4 ];
            accChe1 = infoans [ 5 ];
            accChe2 = infoans [ 6 ];
            accBio1 = infoans [ 7 ];
            accBio2 = infoans [ 8 ];
        }
    }

    protected override void OnInitialized ( )
    {
        setALlInfoforChart ();
        _config = new BarConfig
        {
            Options = new BarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true
                } ,
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
{
                        new BarCategoryAxis
                        {
                            BarThickness = BarThickness.Flex,
                            Stacked = false
                        }
                }
                } ,
                Responsive = true
            }
        };

        _config.Data.Labels.AddRange ( new [] { "BAN1" , "BAN2" , "ICT" , "PHY1" , "PHY2" , "CHE1" , "CHE2" , "BIO1" , "BIO2" } );

        var barSet1 = new BarDataset<DoubleWrapper>
        {
            Label = "Total Right Answered" ,
            BackgroundColor = ColorUtil.ColorString ( 112 , 162 , 49 , 0.7 ) ,
            BorderWidth = 1 ,
            HoverBackgroundColor = ColorUtil.ColorString ( 0 , 0 , 0 , 0.1 ) ,
            HoverBorderColor = "#020202" ,
            HoverBorderWidth = 1 ,
            BorderColor = "#ffffff" ,
        };

        barSet1.AddRange ( new double [] { accB1 , accB2 , accICT , accPhy1 , accPhy2 , accChe1 , accChe2 , accBio1 , accBio2 }.Wrap () );
        _config.Data.Datasets.Add ( barSet1 );

        var barSet2 = new BarDataset<DoubleWrapper>
        {
            Label = "Total Question" ,
            BackgroundColor = ColorUtil.ColorString ( 37 , 113 , 127 , 0.7 ) ,
            BorderWidth = 1 ,
            HoverBackgroundColor = ColorUtil.ColorString ( 0 , 0 , 0 , 0.1 ) ,
            HoverBorderColor = "#020202" ,
            HoverBorderWidth = 1 ,
            BorderColor = "#ffffff" ,
        };

        barSet2.AddRange ( new double [] { anqB1 , anqB2 , anqICT , anqPhy1 , anqPhy2 , anqChe1 , anqChe2 , anqBio1 , anqBio2 }.Wrap () );
        _config.Data.Datasets.Add ( barSet2 );


    }

}
