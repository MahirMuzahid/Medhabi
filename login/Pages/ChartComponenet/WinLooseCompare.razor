@using System.Globalization
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util
@using login.Data


Total Win = @win
<br>
Total Lose = @lose

<ChartJs.Blazor.Charts.ChartJsPieChart @ref="_pieChartJs"
                                       Config="@_config"
                                       Width="600"
                                       Height="300" />

@code {
    private int win, lose;
    private PieConfig _config;
    private ChartJsPieChart _pieChartJs;

    protected override void OnInitialized()
    {
        win = CalculateInfoForPaidStudent.winCount;
        lose = CalculateInfoForPaidStudent.loseCount;
        _config = new PieConfig
        {
            Options = new PieOptions
            {
                Title = new OptionsTitle
                {
                    Display = true
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _config.Data.Labels.AddRange(new[] { "Win", "Lose" });

        var pieSet = new PieDataset
        {
            BackgroundColor = new[] { ColorUtil.ColorString(130, 224, 170, 1.0), ColorUtil.ColorString(229, 115, 115, 1.0), },
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.ColorString(77, 77, 77, 0.1),
            HoverBorderColor = ColorUtil.ColorString(77, 77, 77, 0.1),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };


        pieSet.Data.AddRange(new double[] { win, lose });
        _config.Data.Datasets.Add(pieSet);
    }



}