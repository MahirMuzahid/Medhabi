@page "/SubmitQuestion"
@inject Blazored.LocalStorage.ILocalStorageService oLocalStore
@using login.Data
@inject ServerConnection connect


<div class="limiter">
    <div class="container-login100cn">
        <div class="wrap-login100cn">


            <form class="login100-form validate-form">
                Total Qustion: @TotalQuestion
                <span class="login100-form-title">
                    Question Submittion Panel

                </span>

                <div data-validate="Password is required">

                    <textarea cols="100" rows="8" style="background: #e6e6e6; width:50%; height:40px; position:relative; font-size:12px; border-radius: 5px; " @bind="qc" type="text">    </textarea>
                    Question Code
                </div>
                <div data-validate="Valid email is required: ex@abc.xyz">
                    Main Question
                    <textarea cols="100" rows="8" style="background: #e6e6e6; width:100%; height:150px; position:relative; font-size:13px; border-radius: 5px; " @bind="mq" type="text">  </textarea>
                </div>

                <div data-validate="Password is required">
                    First Choice
                    <textarea cols="100" rows="8" style="background: #e6e6e6; width:100%; height:50px; position:relative; font-size:12px; border-radius: 5px; " @bind="f1" type="text">    </textarea>

                </div>
                <div data-validate="Password is required">
                    Second Choice
                    <textarea cols="100" rows="8" style="background: #e6e6e6; width:100%; height:50px; position:relative; font-size:12px; border-radius: 5px; " @bind="f2" type="text">    </textarea>

                </div>
                <div data-validate="Password is required">
                    Third Choice
                    <textarea cols="100" rows="8" style="background: #e6e6e6; width:100%; height:50px; position:relative; font-size:12px; border-radius: 5px; " @bind="f3" type="text">    </textarea>

                </div>
                <div data-validate="Password is required">
                    Forth Choice
                    <textarea cols="100" rows="8" style="background: #e6e6e6; width:100%; height:50px; position:relative; font-size:12px; border-radius: 5px; " @bind="f4" type="text" n>    </textarea>

                </div>
                <div data-validate="Password is required">
                    Right Answer Number : <h3>@ra</h3><br>
                    <button class="btnans" type="button" @onclick="ans1">
                        1
                    </button>
                    <button class="btnans" type="button" @onclick="ans2">
                        2
                    </button>
                    <button class="btnans" type="button" @onclick="ans3">
                        3
                    </button>
                    <button class="btnans" type="button" @onclick="ans4">
                        4
                    </button>


                </div>
                <div >
                    <h4>Name:<strong> @name</strong></h4>
                    
                </div>

                <div class="container-login100-form-btn">
                    <button class="login100-form-btn" type="button" @onclick="check">
                        Submite
                    </button>
                </div>
                <p style="color:red">@ErrorText</p>
            </form>
        </div>
    </div>
</div>

@code {
    private string ErrorText = null;
    private string passc;
    public string mq { get; set; }
    public string f1 { get; set; }
    public string f2 { get; set; }
    public string f3 { get; set; }
    public string f4 { get; set; }
    public string qc { get; set; }
    public int ra { get; set; }
    public int TotalQuestion { get; set; }
    public string Member { get; set; }
    string name = null;
    int id = 0;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => connect.getTotalQuestion());
        name = await oLocalStore.GetItemAsync<string>("TeacherName");
        id = Int32.Parse (await oLocalStore.GetItemAsync<string>("TeacherID"));

        TotalQuestion = connect.qsNumber;
    }

    private async Task check()
    {
        Question qs = new Question();
        qs.question_code = qc;
        qs.question = mq;
        qs.first_choice = "1. " + f1;
        qs.second_choice = "2. " + f2;
        qs.third_choice = "3. " + f3;
        qs.forth_choice = "4. " + f4;
        qs.right_answer = ra;
        qs.teacherID = id;
        qs.name = name;


        await Task.Run(() => connect.SubmitQuestion(qs));
        await Task.Run(() => connect.getTotalQuestion());

        if(qc != null && mq != null && f1 != null && f2 != null && f3 != null && f4 != null)
        {
            int i = connect.submitted;
            if (i == 0)
            {
                ErrorText = "Successfully Submitted!";
                mq = "";
                f1 = "";
                f2 = "";
                f3 = "";
                f4 = "";
                ra = 0;
            }
            else
            {
                ErrorText = "Try Again!";
            }
        }
        else
        {
            ErrorText = "Fill all the boxes";
        }

        TotalQuestion = connect.qsNumber;
    }

    public void ans1()
    {
        ra = 1;
    }
    public void ans2()
    {
        ra = 2;
    }
    public void ans3()
    {
        ra = 3;
    }
    public void ans4()
    {
        ra = 4;
    }
}
